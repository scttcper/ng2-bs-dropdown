{"version":3,"file":"system-config.js","sourceRoot":"","sources":["Users/scoope7/ng2-bs-dropdown/tmp/broccoli_type_script_compiler-input_base_path-yM77QJW7.tmp/0/src/system-config.ts"],"names":[],"mappings":"AAAA,qBAAqB;AACrB,IAAM,UAAU,GAAG;IACjB,UAAU;CACX,CAAC;AAEF,kCAAkC;AAClC,IAAM,GAAG,GAAQ,EAChB,CAAC;AAGF,mCAAmC;AACnC,IAAM,QAAQ,GAAQ;IACpB,uFAAuF;IACvF,uEAAuE;IACvE,GAAG,EAAE;QACH,gBAAgB,EAAE,IAAI;KACvB;CACF,CAAC;AAGF,wDAAwD;AACxD,IAAM,OAAO,GAAa;IACxB,4BAA4B;IAC5B,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,2BAA2B;IAC3B,mCAAmC;IAEnC,sBAAsB;IACtB,MAAM;IAEN,wBAAwB;IACxB,UAAU;SACP,UAAU,CAEd,CAAC;AAEF,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,OAAO,CAAC,OAAO,CAAC,UAAC,UAAkB;IAC1B,gBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3D,CAAC,CAAC,CAAC;AAKH,wCAAwC;AACxC,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,EAAE;QACH,UAAU,EAAE,iBAAiB;QAC7B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,SAAS;KAClB;IACD,QAAQ,EAAE,gBAAgB;CAC3B,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAA,GAAG,EAAE,UAAA,QAAQ,EAAE,CAAC,CAAC","sourcesContent":["// User Configuration\nconst components = [\n  'dropdown',\n];\n\n/** Map relative paths to URLs. */\nconst map: any = {\n};\n\n\n/** User packages configuration. */\nconst packages: any = {\n  // Set the default extension for the root package, because otherwise the demo-app can't\n  // be built within the production mode. Due to missing file extensions.\n  '.': {\n    defaultExtension: 'js'\n  }\n};\n\n\n// Everything underneath this line is managed by the CLI\nconst barrels: string[] = [\n  // Angular specific barrels.\n  '@angular/core',\n  '@angular/common',\n  '@angular/compiler',\n  '@angular/http',\n  '@angular/forms',\n  '@angular/router',\n  '@angular/platform-browser',\n  '@angular/platform-browser-dynamic',\n\n  // Thirdparty barrels.\n  'rxjs',\n\n  // App specific barrels.\n  'demo-app',\n  ...components\n  /** @cli-barrel */\n];\n\nconst _cliSystemConfig = {};\nbarrels.forEach((barrelName: string) => {\n  (<any> _cliSystemConfig)[barrelName] = { main: 'index' };\n});\n\n/** Type declaration for ambient System. */\ndeclare var System: any;\n\n// Apply the CLI SystemJS configuration.\nSystem.config({\n  map: {\n    '@angular': 'vendor/@angular',\n    'rxjs': 'vendor/rxjs',\n    'main': 'main.js'\n  },\n  packages: _cliSystemConfig\n});\n\n// Apply the user's configuration.\nSystem.config({ map, packages });\n"]}