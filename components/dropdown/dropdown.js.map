{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  HostBinding,\n  EventEmitter,\n  Host,\n  Attribute,\n  OnDestroy,\n  Output,\n} from '@angular/core';\n\n\nexport var openDropdowns: Array<EventEmitter<any>> = [];\n\nfunction closeOpen(): void {\n  let l: number = openDropdowns.length;\n  while (l--) {\n    let n = openDropdowns.pop();\n    n.emit(null);\n  }\n}\n\n@Directive({\n  selector: '.dropdown',\n  host: {\n    '(document:click)': 'haltDisabledEvents()',\n    '[class.open]': 'isOpen'\n  }\n})\nexport class Dropdown implements OnDestroy {\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n  public isOpen: boolean = false;\n\n  constructor( @Attribute('class') cl: string ) {\n    this.toggle.subscribe(() => {\n      this.isOpen = !this.isOpen;\n      if (this.isOpen) {\n        closeOpen();\n        openDropdowns.push(this.toggle);\n      }\n    });\n\n    let open = cl.includes('open');\n    if (open) {\n      this.toggle.emit(null);\n    };\n  }\n\n  ngOnDestroy() {\n    // remove self if in list of open dropdowns\n    let l = openDropdowns.length;\n    while (l--) {\n      if (openDropdowns[l] === this.toggle) {\n        openDropdowns.splice(l, 1);\n      }\n    }\n  }\n\n  haltDisabledEvents(event: Event) {\n    closeOpen();\n  }\n}\n\n@Directive({\n  selector: '.dropdown-toggle',\n  host: {\n    '(click)': 'setMousedown($event)',\n    '[class.active]': 'dropdown.isOpen',\n    '[attr.aria-haspopup]': 'true'\n  }\n})\nexport class DropdownToggle {\n  disabled: boolean = null;\n  classes: string;\n\n  constructor( @Host() private dropdown: Dropdown,\n    @Attribute('class') cl: string ) {\n    this.disabled = cl.includes('disabled');\n  }\n\n  setMousedown(e: Event) {\n    e.stopPropagation();\n    // ignore disabled clicks\n    if (this.disabled) { return; };\n    if (this.dropdown.isOpen) {\n      closeOpen();\n    } else {\n      this.dropdown.toggle.emit(null);\n    }\n  }\n\n  @HostBinding('attr.aria-expanded')\n  /** Gets the aria-expanded value for the component, which must be a string for Dart. */\n  get isAriaExpanded(): string {\n    return this.dropdown.isOpen ? 'true' : 'false';\n  }\n}\n\n// @Directive({\n//   selector: '.dropdown-menu',\n//   host: {\n//     '(click)': 'setMousedown($event)'\n//   }\n// })\n// export class DropdownMenu {\n//   setMousedown(e: Event) {\n//     e.stopPropagation();\n//   }\n// }\n\nexport const DROPDOWN_DIRECTIVES: Array<any> = [Dropdown, DropdownToggle];\n"]}